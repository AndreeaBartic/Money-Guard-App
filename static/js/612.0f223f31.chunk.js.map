{"version":3,"file":"static/js/612.0f223f31.chunk.js","mappings":"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","sources":["styles/breakpoints.js","Auth/RegistrationPage/RegistrationForm.styled.js","components/common/CustomButton.jsx","Auth/LoginPage/LoginForm.styled.js","Auth/LoginPage/LoginForm.jsx","components/pages/LoginPage.jsx"],"sourcesContent":["import { css } from 'styled-components';\nimport bgLoginDesktop from '../images/login-bg/bg-login-web.jpg';\nimport bgLoginDesktop2x from '../images/login-bg/bg-login-web@2x.jpg';\nimport bgRegisterDesktop from '../images/register-bg/bg-register-desktop.jpg';\nimport bgRegisterDesktop2x from '../images/register-bg/bg-register-desktop@2x.jpg';\n\nconst bgDesktop = props =>\n  props.isRegister ? bgRegisterDesktop : bgLoginDesktop;\nconst bgDesktop2x = props =>\n  props.isRegister ? bgRegisterDesktop2x : bgLoginDesktop2x;\n\nexport const mobileStyles = css`\n  @media screen and (max-width: 767px) {\n  }\n`;\n\nexport const tabletStyles = css`\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\n  }\n`;\n\nexport const desktopStyles = css`\n  @media screen and (min-width: 1280px) {\n    background-image: url(${bgDesktop});\n    @media screen and (min-device-pixel-ratio: 2),\n      screen and (-webkit-min-device-pixel-ratio: 2),\n      screen and (-o-min-device-pixel-ratio: 1/2),\n      screen and (min-resolution: 192dpi),\n      screen and (min-resolution: 2dppx) {\n      background-image: url(${bgDesktop2x});\n    }\n  }\n`;\n","import styled from 'styled-components';\nimport backRegisterTablet from '../../images/register-bg/bg-register-tablet.jpg';\nimport backRegisterDesktop from '../../images/png/dollar-desktop.png';\nimport backRegisterTabletRetina from '../../images/png/dollar-tabletx2.png';\nimport backRegisterDesktopRetina from '../../images/png/dollar-desktopx2.png';\nimport backLogIn from '../../images/login-bg/bg-login-web.jpg';\n\nimport { desktopStyles } from 'styles/breakpoints';\n\nexport const Card = styled.div`\n  min-height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  background: radial-gradient(\n    circle at center center,\n    rgba(47, 21, 176, 0.73),\n    rgba(48, 46, 142, 1)\n  );\n\n  @media screen and (min-width: 768px) {\n    background-color: var(--background);\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    min-height: 100vh;\n\n    background-image: url(${backRegisterTablet});\n    background-repeat: no-repeat;\n    background-size: cover;\n\n    @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {\n      background-image: url(${backRegisterTabletRetina});\n      background-size: cover;\n      background-position: center;\n    }\n\n    @media screen and (min-width: 1280px) {\n      background-image: url(${backRegisterDesktop});\n      background-position: center;\n      background-size: cover;\n\n      @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {\n        background-image: url(${backRegisterDesktopRetina});\n        background-size: cover;\n        background-position: center;\n      }\n    }\n  }\n`;\n\nexport const TitleRegisters = styled.h2`\n  color: var(--white-color);\n  line-height: 1.5;\n  font-size: 19px;\n\n  font-weight: 400;\n\n  text-align: center;\n\n  margin: 0px auto 52px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 27px;\n  }\n`;\n\nexport const FormRegister = styled.form`\n  padding: 23px 20px;\n\n  .button-wrapper > button,\n  .button-wrapper > button:hover,\n  .button-wrapper > button:focus {\n    transition: background 0.6s, color 0.6s, outline 0.6s;\n  }\n\n  .button-wrapper > button:hover,\n  .button-wrapper > button:focus {\n    background: transparent !important;\n    color: #ffc727 !important;\n    outline: 1px solid #ffc727;\n  }\n\n  .button-wrapper > a,\n  .button-wrapper > a:hover,\n  .button-wrapper > a:focus {\n    transition: background 0.6s, color 0.6s, outline 0.6s;\n  }\n\n  .button-wrapper > a:hover,\n  .button-wrapper > a:focus {\n    background: transparent !important;\n    color: #ffc727 !important;\n    outline: 1px solid #ffc727;\n  }\n\n  .button-wrapper > a {\n    display: block;\n    width: 300px;\n    padding-block: 13px;\n    @media screen and (max-width: 767.9px) {\n      width: 280px;\n    }\n    border: none;\n    border-radius: 20px;\n    box-shadow: 1px 9px 15px 0px rgba(0, 0, 0, 0.2);\n    background: var(--main-font-color);\n    color: var(--button-text-color);\n    text-align: center;\n    font-size: 18px;\n    line-height: normal;\n    letter-spacing: 1.8px;\n    text-transform: uppercase;\n  }\n\n  .button-wrapper > button {\n    margin-bottom: 20px;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 40px 62px;\n\n    width: 533px;\n    margin: 0 auto;\n    border-radius: 8px;\n    background-color: var(--transparency-10);\n\n    box-shadow: 0px 4px 60px 0px rgba(0, 0, 0, 0.25);\n    backdrop-filter: blur(50px);\n  }\n\n  .button-wrapper {\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n  }\n`;\n\nexport const LogoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  .logo-register {\n    width: 26px;\n  }\n\n  @media screen and (min-width: 768px) {\n    .logo-register {\n      width: 35px;\n    }\n  }\n`;\n\nexport const InputWrapper = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 40px;\n\n  .icons-login {\n    position: absolute;\n    width: 24px;\n    margin-left: 10px;\n  }\n`;\n\nexport const InputRegister = styled.input`\n  width: 100%;\n  background-color: transparent;\n  border: none;\n  border-bottom: 1px solid var(--transparency-40);\n  line-height: 1.5;\n  font-size: 18px;\n  font-weight: 400;\n  color: var(--transparency-60);\n  padding: 0px 45px;\n  margin: 0px;\n  position: relative;\n  outline: none;\n\n  transition: border-color 0.3s, border-radius 0.3s, border-bottom 0.3s;\n\n  &:focus {\n    outline: none;\n    border-bottom: solid 1px #ffc727;\n  }\n`;\n\nexport const IconWrapper = styled.div`\n  position: absolute;\n  width: 22px;\n  right: 0;\n  margin-right: 10px;\n  cursor: pointer;\n`;\n\nexport const ErrorRegister = styled.div`\n  margin-top: 5px;\n  color: #ffc727;\n  text-align: center;\n  line-height: 1.5;\n  font-size: 14px;\n  font-weight: 400;\n`;\n\nexport const MainContainer = styled.main`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: 100vh;\n  background: url(${props =>\n    props.isRegister ? backRegisterDesktop : backLogIn});\n  background-position: center;\n  background-size: cover;\n  background-repeat: no-repeat;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 1200;\n\n  ${desktopStyles}\n\n  @media screen and (min-width: 768px) {\n    box-shadow: rgba(0, 0, 0, 0.25) 0px 4px 60px 0px;\n  }\n`;\n\nexport const ContentContainer = styled.div`\n  width: 400px;\n  flex-shrink: 0;\n  border-radius: 8px;\n  background: var(--Form-color, rgba(255, 255, 255, 0.1));\n  box-shadow: 0px 4px 60px 0px rgba(0, 0, 0, 0.25);\n  backdrop-filter: blur(50px);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n\n  @media screen and (max-width: 767px) {\n    width: 100%;\n    height: 100%;\n    border-radius: 0px;\n    padding: calc(20 * (100vw / 480));\n    min-width: 300px;\n  }\n`;\n\nexport const LogotipStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  h3 {\n    margin: 0 auto 52px;\n    color: var(--white);\n    font-size: 19px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: normal;\n  }\n\n  @media screen and (min-width: 768px) {\n    h3 {\n      font-size: 26px;\n    }\n  }\n`;\n","import { NavLink } from 'react-router-dom';\nimport styled, { css } from 'styled-components';\nimport { Button } from '@mui/material';\n\nconst buttonStyles = css`\n  width: 300px;\n  height: 50px;\n  margin-top: 20px;\n  border: none;\n  border-radius: 20px;\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 1.5;\n  text-transform: uppercase;\n  text-decoration: none;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst CustomButtonBase = styled(Button)`\n  && {\n    ${buttonStyles}\n    color: white;\n    background: var(\n      --button-gradient,\n      linear-gradient(97deg, #ffc727 -16.42%, #9e40ba 97.04%, #7000ff 150.71%)\n    );\n    box-shadow: 1px 9px 15px 0px rgba(0, 0, 0, 0.2);\n\n    &:hover {\n      color: #3a2f43;\n    }\n  }\n`;\n\nconst CustomNavLinkBtnBase = styled(NavLink)`\n  && {\n    ${buttonStyles}\n    background-color: #ffffff;\n    color: #623f8b;\n  }\n`;\n\nexport const CustomButton = ({ isNavLink, customStyles, ...props }) => {\n  const StyledComponent = isNavLink ? CustomNavLinkBtnBase : CustomButtonBase;\n  return <StyledComponent {...props} />;\n};\n","import { Field, Form } from 'formik';\nimport styled from 'styled-components';\nimport { MdEmail, MdHttps } from 'react-icons/md';\nimport { FaUser } from 'react-icons/fa';\n\nexport const FormStyled = styled(Form)`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 60px;\n`;\n\nexport const LabelStyled = styled(`label`)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  margin-bottom: 20px;\n`;\n\nexport const EmailIcon = styled(MdEmail)`\n  color: rgba(255, 255, 255, 0.6);\n`;\n\nexport const PasswordIcon = styled(MdHttps)`\n  color: rgba(255, 255, 255, 0.6);\n`;\n\nexport const UserIcon = styled(FaUser)`\n  color: rgba(255, 255, 255, 0.6);\n`;\n\nexport const IconInInput = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const IconContainer = styled.div`\n  position: absolute;\n`;\n\nexport const IconStyled = styled.div`\n  position: absolute;\n  left: 5px;\n  fill: rgba(255, 255, 255, 0.9);\n`;\n\nexport const ErrorMessageStyled = styled.span`\n  color: #ff868d;\n  font-size: 14px;\n  margin-top: 2px;\n`;\n\nexport const InputStyled = styled(Field)`\n  width: 100%;\n  background-color: transparent;\n  border: none;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.4);\n  line-height: 1.5;\n  font-size: 18px;\n  font-weight: 400;\n  color: rgba(255, 255, 255, 1);\n  padding: 0 35px;\n  margin: 0;\n  position: relative;\n\n  &::placeholder {\n    font-size: 18px;\n    line-height: 1.5;\n    color: rgba(255, 255, 255, 0.6);\n  }\n\n  &:focus,\n  &:hover,\n  &:active,\n  &:visited {\n    outline: none;\n  }\n\n  &:focus::placeholder,\n  &:active::placeholder {\n    transform: translateY(-100%);\n    opacity: 1;\n  }\n`;\n\nexport const ErrorContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 8px;\n`;\n","import React from 'react';\nimport { CustomButton } from '../../components/common/CustomButton';\nimport { useDispatch } from 'react-redux';\nimport * as Yup from 'yup';\nimport { logIn } from '../../Redux/authReducers/authOperations';\nimport { Formik, ErrorMessage } from 'formik';\nimport Logotip from '../../images/svg/logo.svg';\nimport {\n  EmailIcon,\n  FormStyled,\n  IconContainer,\n  IconInInput,\n  InputStyled,\n  LabelStyled,\n  PasswordIcon,\n} from './LoginForm.styled';\nimport { toast } from 'react-toastify';\nimport { LogotipStyled } from '../RegistrationPage/RegistrationForm.styled';\nimport { Link, useNavigate } from 'react-router-dom';\nconst ValidationSchema = Yup.object().shape({\n  email: Yup.string().email('Invalid email address').required('Required'),\n  password: Yup.string().required('Required'),\n});\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleSubmit = async (values, { setSubmitting, resetForm }) => {\n    try {\n      await ValidationSchema.validate(values, { abortEarly: false });\n      const name = values.email.split('@')[0];\n      const formData = {\n        email: values.email.trim(),\n        password: values.password.trim(),\n      };\n      const result = await dispatch(logIn(formData));\n      if (result.error) {\n        toast.error('Login failed. Please check your credentials.', {\n          autoClose: 1200,\n        });\n      } else {\n        toast.success(`You have successfully logged in ${name}.`, {\n          autoClose: 1200,\n        });\n        navigate('/home');\n        resetForm();\n      }\n    } catch (error) {\n      toast.error('Login failed. Please check your credentials.', {\n        autoClose: 3000,\n      });\n    }\n    setSubmitting(false);\n  };\n\n  return (\n    <Formik\n      initialValues={{ email: '', password: '' }}\n      validationSchema={ValidationSchema}\n      onSubmit={handleSubmit}\n    >\n      {({ handleSubmit }) => (\n        <FormStyled onSubmit={handleSubmit}>\n          <LogotipStyled>\n            <img\n              src={Logotip}\n              alt=\"Logo MoneyGuard\"\n              width=\"36px\"\n              height=\"36px\"\n              draggable=\"false\"\n            />\n            <h3>MoneyGuard</h3>\n          </LogotipStyled>\n\n          <LabelStyled>\n            <IconInInput>\n              <IconContainer>\n                <EmailIcon />\n              </IconContainer>\n              <InputStyled name=\"email\" type=\"email\" placeholder=\"E-mail\" />\n            </IconInInput>\n            <ErrorMessage name=\"email\" component=\"div\" />\n          </LabelStyled>\n\n          <LabelStyled>\n            <IconInInput>\n              <IconContainer>\n                <PasswordIcon />\n              </IconContainer>\n              <InputStyled\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"Password\"\n              />\n            </IconInInput>\n            <ErrorMessage name=\"password\" component=\"div\" />\n          </LabelStyled>\n          <p className=\"register\">\n            You don't have an acount?{' '}\n            <Link className=\"register-link\" to=\"/register\">\n              Register\n            </Link>\n          </p>\n          <CustomButton type=\"submit\">Log In</CustomButton>\n          <CustomButton isNavLink to=\"/register\">\n            Register\n          </CustomButton>\n        </FormStyled>\n      )}\n    </Formik>\n  );\n};\nexport default LoginForm;\n","import LoginForm from '../../Auth/LoginPage/LoginForm';\nimport { ContentContainer, MainContainer } from '../../Auth/RegistrationPage/RegistrationForm.styled';\n\n\nconst Login = () => {\n  return (\n    <MainContainer>\n      <ContentContainer>\n        <LoginForm />\n      </ContentContainer>\n    </MainContainer>\n  );\n};\n\nexport default Login;\n"],"names":["css","_templateObject","_taggedTemplateLiteral","_templateObject2","desktopStyles","_templateObject3","props","isRegister","bgRegisterDesktop","bgLoginDesktop","bgRegisterDesktop2x","bgLoginDesktop2x","Card","styled","div","backRegisterTablet","backRegisterTabletRetina","backRegisterDesktop","backRegisterDesktopRetina","TitleRegisters","h2","FormRegister","form","LogoWrapper","_templateObject4","InputWrapper","_templateObject5","InputRegister","input","_templateObject6","IconWrapper","_templateObject7","ErrorRegister","_templateObject8","MainContainer","main","_templateObject9","backLogIn","ContentContainer","_templateObject10","LogotipStyled","_templateObject11","buttonStyles","CustomButtonBase","Button","CustomNavLinkBtnBase","NavLink","CustomButton","_ref","isNavLink","customStyles","StyledComponent","_jsx","FormStyled","Form","LabelStyled","EmailIcon","MdEmail","PasswordIcon","MdHttps","IconInInput","FaUser","IconContainer","InputStyled","span","Field","ValidationSchema","Yup","shape","email","required","password","LoginForm","dispatch","useDispatch","navigate","useNavigate","Formik","initialValues","validationSchema","onSubmit","async","values","setSubmitting","resetForm","validate","abortEarly","name","split","formData","trim","logIn","error","toast","autoClose","success","concat","children","_ref2","handleSubmit","_jsxs","src","Logotip","alt","width","height","draggable","type","placeholder","ErrorMessage","component","className","Link","to","Login"],"sourceRoot":""}